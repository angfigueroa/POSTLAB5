/*
  Nombre del laboratorio 5: Carrera
  Autor: Angela Maria Figueroa Perez, 21395
  TIVA C
  The basic Energia example.
  Turns on an LED on for one second, then off for one second, repeatedly.
  Change the LED define to blink other LEDs.
  
  Hardware Required:
  * LaunchPad with an LED
  
  This example code is in the public domain.
*/


//Variables de los pins 
const int buttonPin = 31; //button en la Tiva 1
const int buttonPin2 = 17;//button en la Tiva 2
//Para el semaforo
#define verde GREEN_LED
#define rojo RED_LED
#define azul BLUE_LED

//Variables del jugador 1 (PINS en Tiva)
const int J1_1 = 2;
const int J1_2 = 3;
const int J1_3 = 4;
const int J1_4 = 5;
const int J1_5 = 6;
const int J1_6 = 7;
const int J1_7 = 8;
const int J1_8 = 9;
int J1_Contador = 0;


//Variables del jugador 2 (PINS en Tiva)
const int J2_1 = 11;
const int J2_2 = 12;
const int J2_3 = 13;
const int J2_4 = 33;
const int J2_5 = 34;
const int J2_6 = 35;
const int J2_7 = 36;
const int J2_8 = 37;
int J2_Contador = 0;


//Estados/banderas
int semaforoState = LOW;//Estado del semaforo
int J1_win = LOW;//Cuando el jugador 1 gana
int J2_win = LOW;//Cuando el jugador 2 gana

//Variables tiempo debounce
long lastDebounceTime = 0;
long lastDebounceTime2 = 0;
long debounceDelay = 100;

void setup(){
  //Inicializando Pines
  pinMode(buttonPin, INPUT_PULLUP);
  pinMode(buttonPin2, INPUT_PULLUP);
  pinMode(verde, OUTPUT);
  pinMode(rojo, OUTPUT);
  pinMode(azul, OUTPUT);
  pinMode(J1_1, OUTPUT);
  pinMode(J1_2, OUTPUT);
  pinMode(J1_3, OUTPUT);
  pinMode(J1_4, OUTPUT);
  pinMode(J1_5, OUTPUT);
  pinMode(J1_6, OUTPUT);
  pinMode(J1_7, OUTPUT);
  pinMode(J1_8, OUTPUT);
  pinMode(J2_1, OUTPUT);
  pinMode(J2_2, OUTPUT);
  pinMode(J2_3, OUTPUT);
  pinMode(J2_4, OUTPUT);
  pinMode(J2_5, OUTPUT);
  pinMode(J2_6, OUTPUT);
  pinMode(J2_7, OUTPUT);
  pinMode(J2_8, OUTPUT);
  attachInterrupt(digitalPinToInterrupt(buttonPin), cuenta1, FALLING);//Interrupcion en el switch 1
  attachInterrupt(digitalPinToInterrupt(buttonPin2), cuenta2, FALLING);;//Interrupcion en el switch 2
  Serial.begin(9600);
}
//Enciende la secuencia para el semaforo
void semaforo(){
  digitalWrite(rojo,HIGH); //PONE EN ROJO
  delay(500);
  digitalWrite(rojo,LOW);
  delay(100);
  digitalWrite(rojo,HIGH);
  digitalWrite(verde,HIGH); //Combinamos para hacer el color amarillo
  delay(500);
  digitalWrite(rojo,LOW);
  digitalWrite(verde,LOW);
  delay(100);
  digitalWrite(rojo,LOW);
  digitalWrite(verde,HIGH); //PONE EN VERDE
  delay(500);
  digitalWrite(verde,LOW); //termina la secuencia
}
//revisar si alguno de los dos hayan ganado
void loop (){
  if(J1_win == 0 and J2_win == 0){
    J1_state();
    J2_state();
    Fin();
    
  }
}
//revisar que el estado del semaforo este activa y nadia gana va a sumar al contador
//si no esta activo el semaforostate 
void cuenta1 (){
  if(semaforoState == HIGH and J1_win == LOW){
    J1_Contador++;
  }
  semaforoCheck();
}

void cuenta2 (){
  if(semaforoState == HIGH and J2_win == LOW){
    J2_Contador++;
  }
  semaforoCheck();
}
//revisar si alguien gano y si se paso del valor 8 del contador
void Fin(){
  if (J1_Contador > 8){
    J1_win == 1;//encender la bandera que gano
    digitalWrite(rojo, LOW);
    digitalWrite(verde, LOW);//morado
    digitalWrite(azul, HIGH);
    delay(2500);
    reseteo();
  }
  else if (J2_Contador > 8){//Gana el jugador 2
    J2_win == 1;
    digitalWrite(rojo, HIGH);
    digitalWrite(verde, HIGH);//naranja
    digitalWrite(azul, LOW);
    delay(2500);
    reseteo(); 
  }
}
//Apagamos todas las leds
void reseteo(){
  digitalWrite(J1_1, LOW);
  digitalWrite(J1_2, LOW);
  digitalWrite(J1_3, LOW);
  digitalWrite(J1_4, LOW);
  digitalWrite(J1_5, LOW);
  digitalWrite(J1_6, LOW);
  digitalWrite(J1_7, LOW);
  digitalWrite(J1_8, LOW);
  digitalWrite(J2_1, LOW);
  digitalWrite(J2_2, LOW);
  digitalWrite(J2_3, LOW);
  digitalWrite(J2_4, LOW);
  digitalWrite(J2_5, LOW);
  digitalWrite(J2_6, LOW);
  digitalWrite(J2_7, LOW);
  digitalWrite(J2_8, LOW);
  J1_Contador = 0;//se apagan las banderas
  J2_Contador = 0;
  digitalWrite(rojo, LOW);//apagar leds
  digitalWrite(verde, LOW);
  digitalWrite(azul, LOW);
  semaforoState = LOW;//apagar bandera
}
//si esta low activa la funcion del semaforo
void semaforoCheck () {
  if (semaforoState == LOW){
    semaforo();
    semaforoState = HIGH;
  } 
}
//Mapear el valor en los puertos
void J1_state() {
  if(J1_Contador == 1){
    digitalWrite(J1_1, HIGH);//1
  }
  else if (J1_Contador == 2){
    digitalWrite(J1_1, LOW);
    digitalWrite(J1_2, HIGH);
  }
  else if (J1_Contador == 3){
    digitalWrite(J1_2, LOW);
    digitalWrite(J1_3, HIGH);
  }
  else if (J1_Contador == 4){
    digitalWrite(J1_3, LOW);
    digitalWrite(J1_4, HIGH);
  }
  else if (J1_Contador == 5){
    digitalWrite(J1_4, LOW);
    digitalWrite(J1_5, HIGH);  
  }
  else if (J1_Contador == 6){
    digitalWrite(J1_5, LOW);
    digitalWrite(J1_6, HIGH);  
  }
  else if (J1_Contador == 7){
    digitalWrite(J1_6, LOW);
    digitalWrite(J1_7, HIGH); 
  }
  else if (J1_Contador == 8){
    digitalWrite(J1_7, LOW);
    digitalWrite(J1_8, HIGH);   
}
}//Mapear el valor en los puertos
void J2_state() {
  if(J2_Contador == 1){
    digitalWrite(J2_1, HIGH);
  }
  else if (J2_Contador == 2){
    digitalWrite(J2_1, LOW);
    digitalWrite(J2_2, HIGH);
  }
  else if (J2_Contador == 3){
    digitalWrite(J2_2, LOW);
    digitalWrite(J2_3, HIGH);
  }
  else if (J2_Contador == 4){
    digitalWrite(J2_3, LOW);
    digitalWrite(J2_4, HIGH);
  }
  else if (J2_Contador == 5){
    digitalWrite(J2_4, LOW);
    digitalWrite(J2_5, HIGH);  
  }
  else if (J2_Contador == 6){
    digitalWrite(J2_5, LOW);
    digitalWrite(J2_6, HIGH);  
  }
  else if (J2_Contador == 7){
    digitalWrite(J2_6, LOW);
    digitalWrite(J2_7, HIGH); 
  }
  else if (J2_Contador == 8){
    digitalWrite(J2_7, LOW);
    digitalWrite(J2_8, HIGH);   
}
}
